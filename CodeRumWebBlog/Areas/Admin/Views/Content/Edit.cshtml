@model Model.Entity.Content

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section Navbar {
    @{
        ViewBag.IsHome = false;
        ViewBag.IsContent = true;
        ViewBag.IsUser = false;
        ViewBag.IsCategory = false;
    }
}

@section jsFooter{
    <script src="/Resourse/plugin/ckeditor/ckeditor.js"></script>
    <script src="~/Resourse/plugin/utils.js"></script>
    <script>

        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('detailContent', {
        });
        document.getElementById('formFile').addEventListener('change', function (e) {
            document.getElementById('filePath').value = e.target.value;
        });
    </script>
}




<div class="container-fluid">
    @using (Html.BeginForm("Edit", "Content", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-12">
                <h4 class="text-center fw-bold col-12">Chỉnh sửa nội dung</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger text-center" })
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>


                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control col-12", @rows = "3" })

                    @*<textarea class="form-control col-12" id="myTextarea" name="Description" rows="4"></textarea>*@
                    <div class="d-flex justify-content-between">
                        <small>Tối đa 150 từ</small>
                        <small id="wordCount">0/150</small>
                    </div>

                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryId, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="input-group col-12">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control col-12", @id="txtImage" } })
                        @*<input type="text" id="txtImage" name="Image" class="form-control col-12">*@
                        <a href="#" class="input-group-text text-decoration-none" id="btnSelectImage"
                           style="border-bottom-left-radius: 0 !important; border-top-left-radius:0px !important;">
                            Chọn ảnh
                        </a>

                    </div>
                    <small class="col-12 font-italic">Có thể dán Url ảnh vào đây</small>
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>


                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-12" })
                    @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control 100vh" }, @id = "detailContent", @row = 5 })

                    @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-12">
                    @Html.LabelFor(model => model.MetaKeyword, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control col-12" } })
                    <small class="col-12 font-italic">Mỗi tag cách nhau 1 dấu phẩy: VD: 'game, test' sẽ được <code>game</code> <code>test</code></small>
                    @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="d-flex justify-content-center">
                        <input type="submit" value="Hoàn tất" class="btn bg-gradient-violet text-light col-4" />
                    </div>
                </div>
            </div>
        </div>

    }
</div>
